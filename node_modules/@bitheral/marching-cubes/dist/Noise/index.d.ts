import { Vector3 } from "three";
export interface NoiseData {
    offset: Vector3;
    scale: number;
    octaves: number;
    persistence: number;
    lacunarity: number;
}
export declare const NoiseData: {
    offset: Vector3;
    scale: number;
    octaves: number;
    persistence: number;
    lacunarity: number;
};
export declare class Noise {
    noise: any;
    seed: number;
    private noiseType;
    constructor(_seed: number);
    static createSeed(_seed?: number): void;
    setType(type: string): void;
    generate3D(position: Vector3, noiseData: NoiseData): number;
    generate3DFBM(position: Vector3, noiseData: NoiseData, offset: Vector3): number;
}
declare const _default: {
    Noise: typeof Noise;
    NoiseData: {
        offset: Vector3;
        scale: number;
        octaves: number;
        persistence: number;
        lacunarity: number;
    };
};
export default _default;
